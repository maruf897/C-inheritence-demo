name: Deploy .NET 8 Project to windows
on:
  push:
    branches:
      - main
      - dev
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

      
    - name: Restore dependencies
      run: dotnet restore 

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish -c Release -o ./publish

    - name: Archive project files
      run: tar -czvf publish.tar.gz -C ./publish .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: publish
        path: publish.tar.gz
  deploy:
    runs-on: windows-latest  # Use Windows runner
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: publish
        path: ./artifact
    
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        choco install jq
    - name: Set WinRM Password
      run: echo "WINRM_PASSWORD=${{ secrets.EC2_PASSWORD }}" >> $GITHUB_ENV
    
    - name: Ensure directories exist and determine target directory
      id: determine-directory
      shell: pwsh
      run: |
        $session = New-PSSession -ComputerName ${{ secrets.EC2_HOST }} -Credential (New-Object PSCredential('${{ secrets.EC2_USER }}', (ConvertTo-SecureString '${{ secrets.EC2_PASSWORD }}' -AsPlainText -Force))) -Port ${{ secrets.EC2_PORT }} -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)
        Invoke-Command -Session $session -ScriptBlock {
          $bluePath = "C:\websites\zPax-Test-Portal-blue"
          $greenPath = "C:\websites\zPax-Test-Portal-green"
          if (-Not (Test-Path $bluePath)) { New-Item -ItemType Directory -Path $bluePath }
          if (-Not (Test-Path $greenPath)) { New-Item -ItemType Directory -Path $greenPath }
          if (Test-Path $bluePath) {
            return "zPax-Test-Portal-green"
          } else {
            return "zPax-Test-Portal-blue"
          }
        } -ArgumentList $null -OutVariable targetDirectory
        echo "target_directory=$($targetDirectory.Trim().Replace('return', '').Trim())" >> $GITHUB_ENV
        Remove-PSSession -Session $session
    - name: Extract files and configure IIS
      shell: pwsh
      run: |
      
        $session = New-PSSession -ComputerName ${{ secrets.EC2_HOST }} -Credential (New-Object PSCredential('${{ secrets.EC2_USER }}', (ConvertTo-SecureString '${{ secrets.EC2_PASSWORD }}' -AsPlainText -Force))) -Port ${{ secrets.EC2_PORT }} -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)
        Copy-Item "./artifact/publish.tar.gz" -Destination "C:\websites\${{ env.target_directory }}" -ToSession $session
        Invoke-Command -Session $session -ScriptBlock {
          cd C:\websites\${{ env.target_directory }}
          

          tar -xzvf publish.tar.gz
          # Remove-Item publish.tar.gz
          # Import-Module WebAdministration
          # if ((Get-WebSite -Name "zPax-Test-Portal").PhysicalPath -eq "C:\websites\zPax-Test-Portal-blue") {
          #   Set-ItemProperty "IIS:\Sites\zPax-Test-Portal" -name physicalPath -value "C:\websites\zPax-Test-Portal-green"
          # } else {
          #   Set-ItemProperty "IIS:\Sites\zPax-Test-Portal" -name physicalPath -value "C:\websites\zPax-Test-Portal-blue"
          # }
          # Restart-WebAppPool -Name "zPax-Test-Portal"
        }
        Remove-PSSession -Session $session
    - name: Complete job
      run: echo "Deployment completed."
